<!--===========================================================================
  This is the build file for the Pentaho GWT Widgets project.
  
  This build file will use the common_build.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.
  
  See common_build.xml for more details
============================================================================-->
<project name="Pentaho GWT Widgets" basedir="." default="jar" xmlns:ivy="antlib:org.apache.ivy.ant">

  <description>
	  This build file is used to create the Pentaho GWT Widgets project
		and works with the common_build.xml file.
	</description>

  <!-- Define the default location of the common build file -->
  <property name="common.build.file"
            value="./common_build.xml"
            description="This is the location of the standardized common_build.xml file" />

  <!-- Import the common_build.xml file which contains all the default tasks -->
  <import file="${common.build.file}" />

  <!--
      AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
      THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
      FOUND IN common_build.xml.
    -->

  <!-- Additional properties for GWT builds -->
  <property name="debuglib.dir" value="${basedir}/debug-lib" description="Directory for development-only libraries" />

  <!--=======================================================================
      resolve
      
      Resolves all the ivy dependencies. This has been modified from the
      original so that it may resolve development-only dependencies.
      ====================================================================-->
  <target name="resolve"
          depends="resolve-default, resolve-test, resolve-debugtools"
          description="Retrieves all the dependent libraries" />

  <!--=======================================================================
      resolve-dev
      
      Resolve all the ivy dependencies that are development-only
      dependencies.
      ====================================================================-->
  <target name="resolve-debugtools" depends="resolve-init" description="Retrieves default configuration dependencies">
    <property name="ivy.debug.config" value="debugtools-win" />
    <condition property="ivy.debug.config" value="debugtools-mac">
      <os family="mac" />
    </condition>
    <condition property="ivy.debug.config" value="debugtools-linux">
      <os family="unix" />
    </condition>

    <ivy:resolve conf="debugtools" />
    <ivy:retrieve conf="debugtools" pattern="${debuglib.dir}/[module]-[revision].[ext]" />
    <ivy:resolve conf="${ivy.debug.config}" />
    <ivy:retrieve conf="${ivy.debug.config}" pattern="${debuglib.dir}/[module]-[revision].[ext]" />
  </target>

  <!--=======================================================================
		    clean-jars
		    
		    Removes all the libraries that have been downloaded for this project
		    using the ivy dependencies.
		    ====================================================================-->
  <target name="clean-jars" description="Cleans the libraries that have been downloaded">
    <delete dir="${lib.dir}" />
    <delete dir="${testlib.dir}" />
    <delete dir="${debuglib.dir}" />
  </target>

</project>
